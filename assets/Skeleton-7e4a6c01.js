import{k as x,r as i,u as V,B as q,j as N}from"./ThemeProvider-26608dcc.js";import{r as y,R}from"./index-61bf1805.js";import{s as $}from"./utils-29fdbd63.js";import{c as I}from"./create-styles-5419e27d.js";var E=Object.defineProperty,z=Object.defineProperties,D=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,B=Object.prototype.hasOwnProperty,C=Object.prototype.propertyIsEnumerable,u=(e,r,a)=>r in e?E(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a,f=(e,r)=>{for(var a in r||(r={}))B.call(r,a)&&u(e,a,r[a]);if(d)for(var a of d(r))C.call(r,a)&&u(e,a,r[a]);return e},c=(e,r)=>z(e,D(r));const W=x({"from, to":{opacity:.4},"50%":{opacity:1}});var K=I((e,{height:r,width:a,radius:t,circle:n,animate:l})=>({root:{height:i(r),width:n?i(r):i(a),borderRadius:n?i(r):e.fn.radius(t),position:"relative",WebkitTransform:"translateZ(0)"},visible:{overflow:"hidden","&::before":c(f({},e.fn.cover(0)),{content:'""',background:e.colorScheme==="dark"?e.colors.dark[7]:e.white,zIndex:10}),"&::after":c(f({},e.fn.cover(0)),{content:'""',background:e.colorScheme==="dark"?e.colors.dark[4]:e.colors.gray[3],animation:l?`${W} 1500ms linear infinite`:"none",zIndex:11})}}));const M=K;var T=Object.defineProperty,o=Object.getOwnPropertySymbols,_=Object.prototype.hasOwnProperty,v=Object.prototype.propertyIsEnumerable,p=(e,r,a)=>r in e?T(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a,Z=(e,r)=>{for(var a in r||(r={}))_.call(r,a)&&p(e,a,r[a]);if(o)for(var a of o(r))v.call(r,a)&&p(e,a,r[a]);return e},A=(e,r)=>{var a={};for(var t in e)_.call(e,t)&&r.indexOf(t)<0&&(a[t]=e[t]);if(e!=null&&o)for(var t of o(e))r.indexOf(t)<0&&v.call(e,t)&&(a[t]=e[t]);return a};const F={height:"auto",width:"100%",visible:!0,animate:!0},b=y.forwardRef((e,r)=>{const a=V("Skeleton",F,e),{height:t,width:n,visible:l,animate:h,className:w,circle:g,radius:S,unstyled:O,variant:P}=a,k=A(a,["height","width","visible","animate","className","circle","radius","unstyled","variant"]),{classes:s,cx:j}=M({height:t,width:n,circle:g,radius:S,animate:h},{name:"Skeleton",unstyled:O,variant:P});return R.createElement(q,Z({className:j(s.root,{[s.visible]:l},w),ref:r},k))});b.displayName="@mantine/core/Skeleton";const G=$(b)(()=>({})),m=y.forwardRef((e,r)=>N.jsx(G,{...e,ref:r}));try{m.displayName="Skeleton",m.__docgenInfo={description:"",displayName:"Skeleton",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},"data-testid":{defaultValue:null,description:"",name:"data-testid",required:!1,type:{name:"string | undefined"}},height:{defaultValue:null,description:"Skeleton height",name:"height",required:!1,type:{name:"string | number | undefined"}},width:{defaultValue:null,description:"Skeleton width",name:"width",required:!1,type:{name:"string | number | undefined"}},radius:{defaultValue:null,description:"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default",name:"radius",required:!1,type:{name:"MantineNumberSize | undefined"}},animate:{defaultValue:null,description:"Whether to show the animation effect",name:"animate",required:!1,type:{name:"boolean | undefined"}},circle:{defaultValue:null,description:"If Skeleton is a circle, it's width and border-radius will be equal to height",name:"circle",required:!1,type:{name:"boolean | undefined"}},visible:{defaultValue:null,description:"Should skeleton overlay be displayed",name:"visible",required:!1,type:{name:"boolean | undefined"}}}}}catch{}export{m as S};
//# sourceMappingURL=Skeleton-7e4a6c01.js.map
